// Script de prueba para verificar funcionalidades b√°sicas
console.log('üß™ Iniciando pruebas de funcionalidades...');

// Funci√≥n de prueba para notificaciones
function testNotificacion() {
  console.log('üîî Probando sistema de notificaciones...');
  
  // Crear elemento de notificaci√≥n de prueba
  const notificacion = document.createElement('div');
  notificacion.className = 'notificacion notificacion-success';
  notificacion.innerHTML = `
    <div class="notificacion-contenido">
      <span class="notificacion-icono">‚úÖ</span>
      <span class="notificacion-mensaje">Prueba de notificaci√≥n exitosa</span>
      <button class="notificacion-cerrar" onclick="this.parentElement.parentElement.remove()">√ó</button>
    </div>
  `;
  
  // Agregar al DOM
  document.body.appendChild(notificacion);
  
  // Animaci√≥n de entrada
  setTimeout(() => {
    notificacion.classList.add('notificacion-mostrar');
  }, 100);
  
  console.log('‚úÖ Notificaci√≥n de prueba creada');
}

// Funci√≥n de prueba para verificar elementos del DOM
function testElementosDOM() {
  console.log('üîç Verificando elementos del DOM...');
  
  const elementos = [
    'cotizaciones-list',
    'total-cotizaciones',
    'cotizaciones-mes',
    'valor-total',
    'buscador',
    'aplicar-filtros'
  ];
  
  elementos.forEach(id => {
    const elemento = document.getElementById(id);
    if (elemento) {
      console.log(`‚úÖ Elemento ${id} encontrado`);
    } else {
      console.log(`‚ùå Elemento ${id} NO encontrado`);
    }
  });
}

// Funci√≥n de prueba para verificar Firebase
function testFirebase() {
  console.log('üî• Verificando Firebase...');
  
  if (window.db) {
    console.log('‚úÖ Firebase DB disponible');
  } else {
    console.log('‚ùå Firebase DB NO disponible');
  }
  
  if (window.auth) {
    console.log('‚úÖ Firebase Auth disponible');
  } else {
    console.log('‚ùå Firebase Auth NO disponible');
  }
}

// Ejecutar pruebas cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', () => {
  console.log('üöÄ DOM cargado, ejecutando pruebas...');
  
  // Esperar un poco para que Firebase se cargue
  setTimeout(() => {
    testElementosDOM();
    testFirebase();
    testNotificacion();
    
    console.log('üß™ Pruebas completadas. Revisa la consola para resultados.');
  }, 2000);
});

// Funci√≥n para probar la carga de cotizaciones
async function testCargarCotizaciones() {
  console.log('üìä Probando carga de cotizaciones...');
  
  if (!window.db) {
    console.log('‚ùå Firebase no disponible para la prueba');
    return;
  }
  
  try {
    const { collection, query, orderBy, getDocs } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js');
    
    const q = query(
      collection(window.db, 'cotizaciones'),
      orderBy('fechaTimestamp', 'desc')
    );
    
    const snapshot = await getDocs(q);
    console.log(`‚úÖ Snapshot obtenido: ${snapshot.size} documentos`);
    
    if (snapshot.empty) {
      console.log('üì≠ No hay cotizaciones en la base de datos');
    } else {
      console.log('üìã Cotizaciones encontradas:', snapshot.size);
      snapshot.docs.forEach((doc, index) => {
        console.log(`  ${index + 1}. ${doc.data().codigo || 'Sin c√≥digo'} - ${doc.data().estado || 'Sin estado'}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Error al cargar cotizaciones:', error);
  }
}

// Hacer funciones disponibles globalmente
window.testNotificacion = testNotificacion;
window.testCargarCotizaciones = testCargarCotizaciones; 