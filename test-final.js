// Script de prueba final para verificar que todos los problemas est√©n solucionados
console.log('üß™ PRUEBA FINAL - Verificando soluciones...');

// 1. Verificar que no hay scripts de prueba ejecut√°ndose autom√°ticamente
console.log('‚úÖ Scripts de prueba comentados - no se ejecutan autom√°ticamente');

// 2. Verificar funciones disponibles
console.log('üîç Funciones disponibles:', {
  cambiarEstadoDirecto: typeof window.cambiarEstadoDirecto,
  crearPreContrato: typeof window.crearPreContrato,
  mostrarNotificacion: typeof window.mostrarNotificacion,
  cargarCotizaciones: typeof window.cargarCotizaciones
});

// 3. Verificar estilos de dropdowns
function verificarEstilosDropdowns() {
  const selects = document.querySelectorAll('select');
  console.log('üîç Verificando estilos de dropdowns:', selects.length, 'selects encontrados');
  
  selects.forEach((select, index) => {
    const computedStyle = window.getComputedStyle(select);
    console.log(`  Select ${index + 1}:`, {
      color: computedStyle.color,
      backgroundColor: computedStyle.backgroundColor,
      borderColor: computedStyle.borderColor
    });
  });
}

// 4. Funci√≥n para probar cambio de estado
function probarCambioEstado() {
  if (window.cotizaciones && window.cotizaciones.length > 0) {
    const primeraCotizacion = window.cotizaciones[0];
    console.log('üß™ Probando cambio de estado para:', primeraCotizacion.codigo);
    console.log('üí° Ejecuta en la consola:');
    console.log(`cambiarEstadoDirecto('${primeraCotizacion.id}', 'Aceptada')`);
  } else {
    console.log('‚ùå No hay cotizaciones cargadas para probar');
  }
}

// 5. Funci√≥n para verificar contratos
function verificarContratos() {
  if (typeof window.contratos !== 'undefined') {
    console.log('üìã Contratos cargados:', window.contratos.length);
    window.contratos.forEach((contrato, index) => {
      console.log(`  ${index + 1}. ${contrato.tituloContrato || contrato.codigoCotizacion} - ${contrato.estadoContrato}`);
    });
  } else {
    console.log('‚ÑπÔ∏è No est√°s en la p√°gina de contratos');
  }
}

// 6. Funci√≥n para probar notificaci√≥n
function probarNotificacion() {
  if (typeof window.mostrarNotificacion === 'function') {
    console.log('üß™ Probando notificaci√≥n...');
    window.mostrarNotificacion('Prueba de notificaci√≥n exitosa', 'success');
  } else {
    console.log('‚ùå Funci√≥n mostrarNotificacion no disponible');
  }
}

// Ejecutar verificaciones
verificarEstilosDropdowns();
probarCambioEstado();
verificarContratos();

// Hacer funciones disponibles globalmente
window.verificarEstilosDropdowns = verificarEstilosDropdowns;
window.probarCambioEstado = probarCambioEstado;
window.verificarContratos = verificarContratos;
window.probarNotificacion = probarNotificacion;

console.log('üß™ PRUEBA FINAL completada');
console.log('üí° Comandos disponibles:');
console.log('  - verificarEstilosDropdowns()');
console.log('  - probarCambioEstado()');
console.log('  - verificarContratos()');
console.log('  - probarNotificacion()'); 